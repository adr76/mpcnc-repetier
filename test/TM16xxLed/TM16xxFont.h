#ifndef MatrixFont_h
#define MatrixFont_h

// 7Segment Font
#define D_1 0x0000000000000006
#define D_F 0x0000000000000031

// -------------------------------------
// Matrix Fonts
// -------------------------------------
#define M_0 0x003e676f7b73633e // 0
#define M_1 0x003f0c0c0c0c0e0c // 1
#define M_2 0x003f33061c30331e // 2
#define M_3 0x001e33301c30331e // 3
#define M_4 0x0078307f33363c38 // 4
#define M_5 0x001e3330301f033f // 5
#define M_6 0x001e33331f03061c // 6
#define M_7 0x000c0c0c1830333f // 7
#define M_8 0x001e33331e33331e // 8
#define M_9 0x000e18303e33331e  // 9

#define M_A 0x0033333f33331e0c // 0  A
#define M_B 0x003f66663e66663f // 1  B
#define M_C 0x003c66030303663c // 2  C
#define M_D 0x001f36666666361f // 3  D
#define M_E 0x007f46161e16467f // 4  E
#define M_F 0x000f06161e16467f // 5  F
#define M_G 0x007c66730303663c // 6  G
#define M_H 0x003333333f333333 // 7  H
#define M_I 0x001e0c0c0c0c0c1e // 8  I
#define M_J 0x001e333330303078 // 9  J
#define M_K 0x006766361e366667 // 10 K
#define M_L 0x007f66460606060f // 11 L
#define M_M 0x0063636b7f7f7763 // 12 M
#define M_N 0x006363737b6f6763 // 13 N
#define M_O 0x001c36636363361c // 14 O
#define M_P 0x000f06063e66663f // 15 P
#define M_Q 0x00381e3b3333331e // 16 Q
#define M_R 0x006766363e66663f // 17 R
#define M_S 0x001e33380e07331e // 18 S
#define M_T 0x001e0c0c0c0c2d3f // 19 T
#define M_U 0x003f333333333333 // 20 U
#define M_V 0x000c1e3333333333 // 21 V
#define M_W 0x0063777f6b636363 // 22 W
#define M_X 0x0063361c1c366363 // 23 X
#define M_Y 0x001e0c0c1e333333 // 24 Y
#define M_Z 0x007f664c1831637f // 25 Z
#define M_ 0x0000000000000000 // 26 EMPTY
#define M_a 0x006e333e301e0000 // 27 a
#define M_b 0x003b66663e060607 // 28 b
#define M_c 0x001e3303331e0000 // 29 c
#define M_d 0x006e33333e303038 // 30 d
#define M_e 0x001e033f331e0000 // 31 e
#define M_f 0x000f06060f06361c // 32 f
#define M_g 0x1f303e33336e0000 // 33 g
#define M_h 0x006766666e360607 // 34 h
#define M_i 0x001e0c0c0c0e000c // 35 i
#define M_j 0x1e33333030300030 // 36 j
#define M_k 0x0067361e36660607 // 37 k
#define M_l 0x001e0c0c0c0c0c0e // 38 l
#define M_m 0x00636b7f7f330000 // 39 m
#define M_n 0x00333333331f0000 // 40 n
#define M_o 0x001e3333331e0000 // 41 o
#define M_p 0x0f063e66663b0000 // 42 p
#define M_q 0x78303e33336e0000 // 43 q
#define M_r 0x000f06666e3b0000 // 44 r
#define M_s 0x001f301e033e0000 // 45 s
#define M_t 0x00182c0c0c3e0c08 // 46 t
#define M_u 0x006e333333330000 // 47 u
#define M_v 0x000c1e3333330000 // 48 v
#define M_w 0x00367f7f6b630000 // 49 w
#define M_x 0x0063361c36630000 // 50 x
#define M_y 0x1f303e3333330000 // 51 y
#define M_z 0x003f260c193f0000  // 52 z
  
#define M_plus 0x00000c0c3f0c0c00 //  0 +
#define M_minus 0x000000003f000000 //  1 -
#define M_star 0x0000663cff3c6600 //  2 *
#define M_slash 0x000103060c183060 //  3 /
#define M_backslash 0x0063660c18336300 //  4 %
#define M_ravno 0x00003f00003f0000 //  5 =
#define M_s6 0x0000000000003b6e //  6 ~
#define M_s7 0x0000000063361c08 //  7 ^
#define M_s8 0x00180c0603060c18 //  8 <
#define M_s9 0x00060c1830180c06 //  9 >
#define M_s10 0x00180c0606060c18 // 10 (
#define M_s11 0x00060c1818180c06 // 11 )
#define M_s12 0x001e06060606061e // 12 [
#define M_s13 0x001e18181818181e // 13 ]
#define M_s14 0x00380c0c070c0c38 // 14 {
#define M_s15 0x00070c0c380c0c07 // 15 }
#define M_s16 0x000c0c0000000000 // 16 .
#define M_s17 0x000c0c00000c0c00 // 17 :
#define M_s18 0x060c0c00000c0c00 // 18 ;
#define M_s19 0x060c0c0000000000 // 19 ,
#define M_s20 0x00180018183c3c18 // 20 !
#define M_s21 0x000c000c1830331e // 21 ?
#define M_s22 0x001e037b7b7b633e // 22 @
#define M_s23 0x006e333b6e1c361c // 23 &
#define M_s24 0x000c1f301e033e0c // 24 $
#define M_s25 0x0036367f367f3636 // 25 #
#define M_s26 0x00406030180c0603 // 26 /
#define M_s27 0x0000000000180c0c // 27 `
#define M_s28 0x0000000000030606  // 28 '

const uint64_t DIGITS[] = {
  0x003e676f7b73633e, // 0
  0x003f0c0c0c0c0e0c, // 1
  0x003f33061c30331e, // 2
  0x001e33301c30331e, // 3
  0x0078307f33363c38, // 4
  0x001e3330301f033f, // 5
  0x001e33331f03061c, // 6
  0x000c0c0c1830333f, // 7
  0x001e33331e33331e, // 8
  0x000e18303e33331e  // 9
};
const uint64_t LETERS[] = {
  0x0033333f33331e0c, // 0  A
  0x003f66663e66663f, // 1  B
  0x003c66030303663c, // 2  C
  0x001f36666666361f, // 3  D
  0x007f46161e16467f, // 4  E
  0x000f06161e16467f, // 5  F
  0x007c66730303663c, // 6  G
  0x003333333f333333, // 7  H
  0x001e0c0c0c0c0c1e, // 8  I
  0x001e333330303078, // 9  J
  0x006766361e366667, // 10 K
  0x007f66460606060f, // 11 L
  0x0063636b7f7f7763, // 12 M
  0x006363737b6f6763, // 13 N
  0x001c36636363361c, // 14 O
  0x000f06063e66663f, // 15 P
  0x00381e3b3333331e, // 16 Q
  0x006766363e66663f, // 17 R
  0x001e33380e07331e, // 18 S
  0x001e0c0c0c0c2d3f, // 19 T
  0x003f333333333333, // 20 U
  0x000c1e3333333333, // 21 V
  0x0063777f6b636363, // 22 W
  0x0063361c1c366363, // 23 X
  0x001e0c0c1e333333, // 24 Y
  0x007f664c1831637f, // 25 Z
  0x0000000000000000, // 26 EMPTY
  0x006e333e301e0000, // 27 a
  0x003b66663e060607, // 28 b
  0x001e3303331e0000, // 29 c
  0x006e33333e303038, // 30 d
  0x001e033f331e0000, // 31 e
  0x000f06060f06361c, // 32 f
  0x1f303e33336e0000, // 33 g
  0x006766666e360607, // 34 h
  0x001e0c0c0c0e000c, // 35 i
  0x1e33333030300030, // 36 j
  0x0067361e36660607, // 37 k
  0x001e0c0c0c0c0c0e, // 38 l
  0x00636b7f7f330000, // 39 m
  0x00333333331f0000, // 40 n
  0x001e3333331e0000, // 41 o
  0x0f063e66663b0000, // 42 p
  0x78303e33336e0000, // 43 q
  0x000f06666e3b0000, // 44 r
  0x001f301e033e0000, // 45 s
  0x00182c0c0c3e0c08, // 46 t
  0x006e333333330000, // 47 u
  0x000c1e3333330000, // 48 v
  0x00367f7f6b630000, // 49 w
  0x0063361c36630000, // 50 x
  0x1f303e3333330000, // 51 y
  0x003f260c193f0000  // 52 z
};
const uint64_t SIGNS[] = {
  0x00000c0c3f0c0c00, //  0 +
  0x000000003f000000, //  1 -
  0x0000663cff3c6600, //  2 *
  0x000103060c183060, //  3 /
  0x0063660c18336300, //  4 %
  0x00003f00003f0000, //  5 =
  0x0000000000003b6e, //  6 ~
  0x0000000063361c08, //  7 ^
  0x00180c0603060c18, //  8 <
  0x00060c1830180c06, //  9 >
  0x00180c0606060c18, // 10 (
  0x00060c1818180c06, // 11 )
  0x001e06060606061e, // 12 [
  0x001e18181818181e, // 13 ]
  0x00380c0c070c0c38, // 14 {
  0x00070c0c380c0c07, // 15 }
  0x000c0c0000000000, // 16 .
  0x000c0c00000c0c00, // 17 :
  0x060c0c00000c0c00, // 18 ;
  0x060c0c0000000000, // 19 ,
  0x00180018183c3c18, // 20 !
  0x000c000c1830331e, // 21 ?
  0x001e037b7b7b633e, // 22 @
  0x006e333b6e1c361c, // 23 &
  0x000c1f301e033e0c, // 24 $
  0x0036367f367f3636, // 25 #
  0x00406030180c0603, // 26 /
  0x0000000000180c0c, // 27 `
  0x0000000000030606  // 28 '
};

const uint64_t ROWS_RIGHT[] = {
  0x040c1830180c0400,
  0x0818306130180800,
  0x103061c361301000,
  0x2061c386c3612000,
  0x41c3860c86c34100
};

#endif	//MatrixFont.h